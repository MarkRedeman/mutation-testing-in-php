Humbug running test suite to generate logs and code coverage data...
Humbug has completed the initial test run successfully.
Tests: 46 Line Coverage: 96.27%
Humbug is analysing source files...
Mutation Testing is commencing on 7 files...
(.: killed, M: escaped, S: uncovered, E: fatal error, T: timed out)
................................E...........MM.M............ |   60 (0/7)
...M..MM.M..............
84 mutations were generated:
      76 mutants were killed
       0 mutants were not covered by tests
       7 covered mutants were not detected
       1 fatal errors were encountered
       0 time outs were encountered

Metrics:
    Mutation Score Indicator (MSI): 92%
    Mutation Code Coverage: 100%
    Covered Code MSI: 92%

Remember that some mutants will inevitably be harmless (i.e. false positives).
Time: 15.39 seconds Memory: 9.25MB
Humbug results are being logged as TEXT to: humbuglog.txt
------
Escapes
------


1) \Humbug\Mutator\Number\FloatValue
Diff on \Money\Money::divide() in /home/mark/Projects/talks/mutating-php/examples/money/lib/Money/Money.php:
--- Original
+++ New
@@ @@
     {
-        if ($divisor === 0 || $divisor === 0.0){
+        if ($divisor === 0 || $divisor === 1.00){
             throw new InvalidArgumentException('Division by zero');
         }

         $this->assertOperand($divisor, true);
         $this->assertRoundingMode($rounding_mode);



2) \Humbug\Mutator\Boolean\TrueValue
Diff on \Money\Money::divide() in /home/mark/Projects/talks/mutating-php/examples/money/lib/Money/Money.php:
--- Original
+++ New
@@ @@

-        $this->assertOperand($divisor, true);
+        $this->assertOperand($divisor, false);
         $this->assertRoundingMode($rounding_mode);

         $quotient = (int) round($this->amount / $divisor, 0, $rounding_mode);

         return new Money($quotient, $this->currency);
     }


3) \Humbug\Mutator\Number\IntegerValue
Diff on \Money\Money::divide() in /home/mark/Projects/talks/mutating-php/examples/money/lib/Money/Money.php:
--- Original
+++ New
@@ @@

-        $quotient = (int) round($this->amount / $divisor, 0, $rounding_mode);
+        $quotient = (int) round($this->amount / $divisor, 1, $rounding_mode);

         return new Money($quotient, $this->currency);
     }

     /**
      * Allocate the money according to a list of ratio's


4) \Humbug\Mutator\ConditionalBoundary\GreaterThan
Diff on \Money\Money::isPositive() in /home/mark/Projects/talks/mutating-php/examples/money/lib/Money/Money.php:
--- Original
+++ New
@@ @@
     {
-        return $this->amount > 0;
+        return $this->amount >= 0;
     }

     /** @return bool */
     public function isNegative()
     {
         return $this->amount < 0;


5) \Humbug\Mutator\ReturnValue\IntegerValue
Diff on \Money\Money::isNegative() in /home/mark/Projects/talks/mutating-php/examples/money/lib/Money/Money.php:
--- Original
+++ New
@@ @@
     {
-        return $this->amount < 0;
+        return $this->amount < 1;
     }

     /**
      * @param $string
      * @throws \Money\InvalidArgumentException
      * @return int


6) \Humbug\Mutator\ConditionalBoundary\LessThan
Diff on \Money\Money::isNegative() in /home/mark/Projects/talks/mutating-php/examples/money/lib/Money/Money.php:
--- Original
+++ New
@@ @@
     {
-        return $this->amount < 0;
+        return $this->amount <= 0;
     }

     /**
      * @param $string
      * @throws \Money\InvalidArgumentException
      * @return int


7) \Humbug\Mutator\Number\IntegerValue
Diff on \Money\Money::isNegative() in /home/mark/Projects/talks/mutating-php/examples/money/lib/Money/Money.php:
--- Original
+++ New
@@ @@
     {
-        return $this->amount < 0;
+        return $this->amount < 1;
     }

     /**
      * @param $string
      * @throws \Money\InvalidArgumentException
      * @return int


------
Errors
------


1) \Humbug\Mutator\Arithmetic\Subtraction
Diff on \Money\Money::subtract() in /home/mark/Projects/talks/mutating-php/examples/money/lib/Money/Money.php:
--- Original
+++ New
@@ @@

-        return new self($this->amount - $subtrahend->amount, $this->currency);
+        return new self($this->amount + $subtrahend->amount, $this->currency);
     }

     /**
      * @param int|float $operand
      * @throws \Money\InvalidArgumentException
      */

The following output was received on stderr:

PHP Fatal error:  Class 'Tests\Support\CommandTester' not found in /home/mark/Projects/work/l5autorisatie/tests/AccessControl/Memberships/ArchiveMembership/ArchiveMembershipCommandTest.php on line 6
PHP Stack trace:
PHP   1. {main}() /home/mark/Projects/talks/mutating-php/examples/money/vendor/phpunit/phpunit/composer/bin/phpunit:0
PHP   2. PHPUnit_TextUI_Command::main() /home/mark/Projects/talks/mutating-php/examples/money/vendor/phpunit/phpunit/composer/bin/phpunit:63
PHP   3. PHPUnit_TextUI_Command->run() /home/mark/Projects/talks/mutating-php/examples/money/vendor/phpunit/phpunit/PHPUnit/TextUI/Command.php:129
PHP   4. PHPUnit_TextUI_Command->handleArguments() /home/mark/Projects/talks/mutating-php/examples/money/vendor/phpunit/phpunit/PHPUnit/TextUI/Command.php:138
PHP   5. PHPUnit_Util_Configuration->getTestSuiteConfiguration() /home/mark/Projects/talks/mutating-php/examples/money/vendor/phpunit/phpunit/PHPUnit/TextUI/Command.php:657
PHP   6. PHPUnit_Util_Configuration->getTestSuite() /home/mark/Projects/talks/mutating-php/examples/money/vendor/phpunit/phpunit/PHPUnit/Util/Configuration.php:789
PHP   7. PHPUnit_Framework_TestSuite->addTestFiles() /home/mark/Projects/talks/mutating-php/examples/money/vendor/phpunit/phpunit/PHPUnit/Util/Configuration.php:873
PHP   8. PHPUnit_Framework_TestSuite->addTestFile() /home/mark/.composer/vendor/phpunit/phpunit/src/Framework/TestSuite.php:403
PHP   9. PHPUnit_Util_Fileloader::checkAndLoad() /home/mark/.composer/vendor/phpunit/phpunit/src/Framework/TestSuite.php:331
PHP  10. PHPUnit_Util_Fileloader::load() /home/mark/Projects/talks/mutating-php/examples/money/vendor/phpunit/phpunit/PHPUnit/Util/Fileloader.php:76
PHP  11. include_once() /home/mark/Projects/talks/mutating-php/examples/money/vendor/phpunit/phpunit/PHPUnit/Util/Fileloader.php:92


